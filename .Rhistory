out.lab <- paste(x.lab, comma(x))
return(out.lab)
}
ggplot(records.df) +
geom_point(
aes(x = TotalWorkingYears, y = MonthlyIncome),
position = "jitter", alpha = 1/3, pch = 19
) +
scale_y_continuous(labels = labelLast.usd) +
scale_x_continuous(labels = labelFirst.years) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour ="black")
)
ggsave("./Plots/plot01_trend_salaryVSxp.png")
ggplot(records.df) +
geom_point(
aes(x = TotalWorkingYears, y = MonthlyIncome),
position = "jitter", alpha = 1/3, pch = 19
) +
scale_y_continuous(labels = labelLast.usd) +
scale_x_continuous(labels = labelFirst.years) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour ="black")
)
labelFirst.years <- function(x){
x.lab <- c("years", rep("", length(x) - 1))
out.lab <- paste(x, x.lab)
return(out.lab)
}
labelLast.usd <- function(x){
require(scales)
x.lab <- c(rep("", length(x) - 1), "USD")
out.lab <- paste(x.lab, comma(x))
return(out.lab)
}
ggplot(records.df) +
geom_point(
aes(x = TotalWorkingYears, y = MonthlyIncome),
position = "jitter", alpha = 1/3, pch = 19
) +
scale_y_continuous(labels = labelLast.usd) +
scale_x_continuous(labels = labelFirst.years) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour ="black")
)
ggsave("./Plots/plot01_trend_salaryVSxp.png")
ggplot(records.df) +
geom_point(
aes(x = YearsAtCompany, y = SalaryHike),
position = "jitter", alpha = 1/3, pch = 19
)
ggplot(records.df) +
geom_point(
aes(x = YearsSinceLastPromotion, y = SalaryHike),
position = "jitter", alpha = 1/3, pch = 19
)
ggplot(records.df) +
geom_point(
aes(x = YearsAtCompany, y = SalaryHike),
position = "jitter", alpha = 1/3, pch = 19
)
ggplot(records.df) +
scale_y_continuous(labels = percent) +
geom_point(
aes(x = YearsAtCompany, y = SalaryHike),
position = "jitter", alpha = 1/3, pch = 19
)
labelFirst.years <- function(x){
x.lab <- c("years", rep("", length(x) - 1))
out.lab <- paste(x, x.lab)
return(out.lab)
}
ggplot(records.df) +
scale_y_continuous(labels = percent) +
scale_x_continuous(labels = labelFirst.years) +
geom_point(
aes(x = YearsAtCompany, y = SalaryHike),
position = "jitter", alpha = 1/3, pch = 19
)
ggplot(records.df) +
scale_y_continuous(labels = percent) +
scale_x_continuous(labels = labelFirst.years) +
geom_point(
aes(x = YearsAtCompany, y = SalaryHike),
position = "jitter", alpha = 1/3, pch = 19
) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour ="black")
)
ggplot(records.df) +
scale_y_continuous(labels = percent) +
scale_x_continuous(labels = labelFirst.years) +
geom_point(
aes(x = YearsAtCompany, y = SalaryHike),
position = "jitter", alpha = 1/3, pch = 19
) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour ="black")
)
ggsave("./Plots/plot00_trend_salaryhikeVStenure.png")
library(treemapify)
str(records.df)
dept.df <- records.df %>%
group_by(Department) %>%
summarise(
Plantilla = n() # Assumes unique employees
)
library(plyr)
library(dplyr)
library(treemapify)
dept.df <- records.df %>%
group_by(Department) %>%
summarise(
Plantilla = n() # Assumes unique employees
)
str(dept.df)
dept.df <- records.df %>%
group_by(Department) %>%
summarise(
Plantilla = n() # Assumes unique employees
) %>%
ungroup()
ggplot(dept.df) +
aes(area = Plantilla, label = Department, fill = Department) +
geom_treemap() +
geom_treemap_text(fontface = "italic")
roles.df <- records.df %>%
group_by(Department, JobRole) %>%
summarise(
Plantilla = n()
) %>%
ungroup()
str(roles.df)
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = JobRole,
label = Department, fill = Department
) +
geom_treemap() +
geom_treemap_subgroup_border()
str(roles.df)
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = Department, fill = Department
) +
geom_treemap() +
geom_treemap_subgroup_border() +
geom_treemap_text(fontface = "italic") +
guides(fill = guide_legend(reverse = TRUE))
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
geom_treemap() +
geom_treemap_subgroup_border() +
geom_treemap_text(fontface = "italic") +
guides(fill = guide_legend(reverse = TRUE))
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
geom_treemap() +
geom_treemap_subgroup_border() +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic") +
geom_treemap_text(place = "bottomright") +
guides(fill = guide_legend(reverse = TRUE))
source("./Scripts/template.R")
countDistinct <- function(x) length(unique(x))
dept.cols <- dataseer.cols[1:countDistinct(roles.df$Department)]
names(dept.cols) <- unique(roles.df$Department)
dept.cols
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
geom_treemap() +
geom_treemap_subgroup_border() +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic") +
geom_treemap_text(place = "bottomright") +
scale_fill_manual(values = dept.cols)
dataser.cols
dataseer.cols
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
geom_treemap() +
geom_treemap_subgroup_border() +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic", colour = "black") +
geom_treemap_text(place = "bottomright", colour = "#787c84") +
scale_fill_manual(values = dept.cols)
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
geom_treemap() +
geom_treemap_subgroup_border() +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic", colour = "black") +
geom_treemap_text(place = "bottomright", colour = "black") +
scale_fill_manual(values = dept.cols)
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
# Job Roles
geom_treemap() +
geom_treemap_text(place = "bottomright", colour = "black") +
# Dept
geom_treemap_subgroup_border(colour = NA) +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic", colour = "black") +
# Refine
scale_fill_manual(values = dept.cols)
# guides(fill = guide_legend(reverse = TRUE))
ggsave("./Plots/plot02_parts_dept-composition.png")
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
# Job Roles
geom_treemap(colour = "white") +
geom_treemap_text(place = "bottomright", colour = "black") +
# Dept
geom_treemap_subgroup_border(colour = NA) +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic", colour = "black") +
# Refine
scale_fill_manual(values = dept.cols)
# guides(fill = guide_legend(reverse = TRUE))
ggsave("./Plots/plot02_parts_dept-composition.png")
?theme
?element_text
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
# Job Roles
geom_treemap(colour = "white") +
geom_treemap_text(place = "bottomright", colour = "black") +
# Dept
geom_treemap_subgroup_border(colour = NA) +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic", colour = "black") +
# Refine
scale_fill_manual(values = dept.cols) +
# guides(fill = guide_legend(reverse = TRUE))
theme(
legend.title = element_text(face = "bold")
)
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
# Job Roles
geom_treemap(colour = "white") +
geom_treemap_text(place = "bottomright", colour = "black") +
# Dept
geom_treemap_subgroup_border(colour = NA) +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic", colour = "black") +
# Refine
scale_fill_manual(values = dept.cols) +
# guides(fill = guide_legend(reverse = TRUE))
theme(
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "italic")
)
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
# Job Roles
geom_treemap(colour = "white") +
geom_treemap_text(place = "bottomright", colour = "black") +
# Dept
geom_treemap_subgroup_border(colour = NA) +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic", colour = "black") +
# Refine
scale_fill_manual(guide = FALSE, values = dept.cols) +
# guides(fill = guide_legend(reverse = TRUE))
theme(
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "italic")
)
ggsave("./Plots/plot02_parts_dept-composition.png")
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
# Job Roles
geom_treemap(colour = "white") +
# geom_treemap_text(place = "bottomright", colour = "black") +
# Dept
geom_treemap_subgroup_border(colour = NA) +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic", colour = "black") +
# Refine
scale_fill_manual(guide = TRUE, values = dept.cols) +
# guides(fill = guide_legend(reverse = TRUE))
theme(
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "italic")
)
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
# Job Roles
geom_treemap(colour = "white") +
# geom_treemap_text(place = "bottomright", colour = "black") +
# Dept
geom_treemap_subgroup_border(colour = NA) +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic", colour = "black") +
# Refine
scale_fill_manual(values = dept.cols) +
# guides(fill = guide_legend(reverse = TRUE))
theme(
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "italic")
)
project.name <- "employee-surveys"
author.name <- "IBM Watson"
data.source <- "HR Employee Attrition"
## Path to data://
source.path <- file.path("~/Data/DataLake", author.name, data.source)
source.path <- file.path(source.path, "data")
library(googledrive)
drive_auth()
data.path <- file.path("~/Data", project.name)
local.path <- "./Data"
data.path %>% drive_ls()
get.files <- c("Employee records.csv", "Employee Surveys.xlsx")
lapply(
get.files,
function(temp.file){
# temp.file <- get.files[1]
dataset.file <- data.path %>%
file.path(temp.file) %>% ## Select file for download
drive_get()
dataset.id <- as_id(dataset.file) ## Get ID for download
dataset.path <- file.path(local.path, dataset.file$name) # Assumes nrow = 1
drive_download(dataset.id, path = dataset.path, overwrite = TRUE) ## Download raw data file
}
)
library(readr)
records.df <- read_csv(get.files[1])
records.path <- file.path("./Data", get.files[1])
records.df <- read_csv()
records.df <- read_csv(records.path)
str(records.df)
library(readxl)
local.path
surveys.path <- file.path(local.path, get.files[2])
surveys.sheets <- excel_sheets(surveys.path)
surveys.sheets
return(temp.df)
surveys.ls <- lapply(
surveys.sheets,
function(temp.sheet){
temp.df <- read_excel(surveys.path, sheet = temp.sheet)
return(temp.df)
}
)
str(surveys.ls)
surveys.ls %>% lapply(function(temp.df) lapply(temp.df, unique))
names(surveys.sheets)
surveys.sheets
names(surveys.sheets) <- surveys.sheets
surveys.ls <- lapply(
surveys.sheets,
function(temp.sheet){
temp.df <- read_excel(surveys.path, sheet = temp.sheet)
return(temp.df)
}
)
surveys.ls %>% lapply(function(temp.df) lapply(temp.df, unique))
surveys.ls$`Satisfaction survey`$EnvironmentSatisfaction %<>%
factors(levels = c("Low", "Medium", "High", "Very High"))
str(surveys.ls$`Satisfaction survey`$EnvironmentSatisfaction)
library(magrittr)
surveys.ls$`Satisfaction survey`$EnvironmentSatisfaction %<>%
factors(levels = c("Low", "Medium", "High", "Very High"))
surveys.ls$`Satisfaction survey`$EnvironmentSatisfaction %<>%
factor(levels = c("Low", "Medium", "High", "Very High"))
str(surveys.ls$`Satisfaction survey`)
surveys.ls$`Satisfaction survey`$EnvironmentSatisfaction %<>%
factor(levels = c("Low", "Medium", "High", "Very high"))
surveys.ls <- lapply(
surveys.sheets,
function(temp.sheet){
temp.df <- read_excel(surveys.path, sheet = temp.sheet)
return(temp.df)
}
)
surveys.ls$`Satisfaction survey`$EnvironmentSatisfaction %<>%
factor(levels = c("Low", "Medium", "High", "Very high"))
str(surveys.ls$`Satisfaction survey`)
surveys.ls$`Satisfaction survey`$WorkLifeBalance %<>%
factor(levels = c("Bad", "Good", "Better", "Best"))
surveys.ls$`Performance rating survey`$PerformanceRating %<>%
factor(levels = c("Low", "Good", "Excellent", "Outstanding"))
surveys.ls$`Performance rating survey`$BusinessTravel %<>%
factor(levels = c("Non-Travel", "Rarely", "Frequently"))
str(surveys.ls)
surveys.ls <- lapply(
surveys.sheets,
function(temp.sheet){
temp.df <- read_excel(surveys.path, sheet = temp.sheet)
return(temp.df)
}
)
surveys.ls$`Satisfaction survey`$EnvironmentSatisfaction %<>%
factor(levels = c("Low", "Medium", "High", "Very high"))
surveys.ls$`Satisfaction survey`$RelationshipSatisfaction%<>%
factor(levels = c("Low", "Medium", "High", "Very high"))
surveys.ls$`Satisfaction survey`$JobSatisfaction%<>%
factor(levels = c("Low", "Medium", "High", "Very high"))
surveys.ls$`Satisfaction survey`$JobInvolvement %<>%
factor(levels = c("Low", "Medium", "High", "Very high"))
surveys.ls$`Satisfaction survey`$WorkLifeBalance %<>%
factor(levels = c("Bad", "Good", "Better", "Best"))
surveys.ls$`Performance rating survey`$PerformanceRating %<>%
factor(levels = c("Low", "Good", "Excellent", "Outstanding"))
surveys.ls$`Performance rating survey`$BusinessTravel %<>%
factor(levels = c("Non-Travel", "Rarely", "Frequently"))
str(surveys.ls)
str(records.df)
data00.path <- file.path(local.path, "data00_load.RData")
save(records.df, surveys.ls, file = data00.path)
data.path
drive_upload(data00.path, paste0(data.path, "/"))
project.name <- "employee-surveys"
author.name <- "IBM Watson"
data.source <- "HR Employee Attrition"
## Path to data://
source.path <- file.path("~/Data/DataLake", author.name, data.source)
source.path <- file.path(source.path, "data")
library(googledrive)
drive_auth()
data.path <- file.path("~/Data", project.name)
local.path <- "./Data"
data00.path <- file.path(local.path, "data00_load.RData")
load(data00.path)
str(records.df)
unique(records.df$Education)
project.name <- "employee-surveys"
author.name <- "IBM Watson"
data.source <- "HR Employee Attrition"
## Path to data://
source.path <- file.path("~/Data/DataLake", author.name, data.source)
source.path <- file.path(source.path, "data")
library(googledrive)
drive_auth()
data.path <- file.path("~/Data", project.name)
local.path <- "./Data"
# View extant files in project data://
data.path %>% drive_ls()
# Download files
get.files <- c("Employee records.csv", "Employee Surveys.xlsx")
library(readr)
records.path <- file.path(local.path, get.files[1])
records.df <- read_csv(records.path)
library(readxl)
surveys.path <- file.path(local.path, get.files[2])
surveys.sheets <- excel_sheets(surveys.path)
names(surveys.sheets) <- surveys.sheets
surveys.ls <- lapply(
surveys.sheets,
function(temp.sheet){
temp.df <- read_excel(surveys.path, sheet = temp.sheet)
return(temp.df)
}
)
library(magrittr)
records.df$Education %<>%
factor(levels = c("Below College", "College", "Bachelor", "Master", "Doctor"))
str(records.df)
surveys.ls$`Satisfaction survey`$EnvironmentSatisfaction %<>%
factor(levels = c("Low", "Medium", "High", "Very high"))
surveys.ls$`Satisfaction survey`$RelationshipSatisfaction%<>%
factor(levels = c("Low", "Medium", "High", "Very high"))
surveys.ls$`Satisfaction survey`$JobSatisfaction%<>%
factor(levels = c("Low", "Medium", "High", "Very high"))
surveys.ls$`Satisfaction survey`$JobInvolvement %<>%
factor(levels = c("Low", "Medium", "High", "Very high"))
surveys.ls$`Satisfaction survey`$WorkLifeBalance %<>%
factor(levels = c("Bad", "Good", "Better", "Best"))
surveys.ls$`Performance rating survey`$PerformanceRating %<>%
factor(levels = c("Low", "Good", "Excellent", "Outstanding"))
surveys.ls$`Performance rating survey`$BusinessTravel %<>%
factor(levels = c("Non-Travel", "Rarely", "Frequently"))
data00.path <- file.path(local.path, "data00_load.RData")
save(records.df, surveys.ls, file = data00.path)
drive_upload(data00.path, paste0(data.path, "/"))
