records.id <- records.source %>% drive_get() %>% as_id()
records.id
drive_download(records.id, records.cache, overwrite = TRUE)
cache.path <- file.path(".", "Data")
stage.path <- file.path("~/Data", "employee-surveys")
records.file <- "Employee records.csv"
records.cache <- file.path(cache.path, records.file) # Path to local
library(readr)
records.raw <- read_csv(records.cache)
str(records.raw)
## Only corrections to metadata: factors
records.df <- records.raw
## Upload parsed data
saveRDS(records.df, file.path(cache.path, "records.rds"))
## Upload parsed data
records.parsed <- file.path(cache.path, "records.rds")
## Data
records.parsed <- file.path(cache.path, "records.rds")
records.df <- readRDS(records.parsed)
library(ggplot2)
str(recrods.df)
str(records.df)
ggplot(records.df) +
geom_point(
aes(x = YearsAtCompany, y = SalaryHike)
)
ggplot(records.df) +
geom_point(
aes(x = YearsAtCompany, y = SalaryHike),
position = "jitter", alpha = 1/3, pch = 19
)
ggplot(records.df) +
geom_point(
aes(x = YearsSinceLastPromotion, y = SalaryHike),
position = "jitter", alpha = 1/3, pch = 19
)
ggplot(records.df) +
geom_point(
aes(x = TotalWorkingYears, y = MonthlyIncome)
)
ggplot(records.df) +
geom_point(
aes(x = TotalWorkingYears, y = MonthlyIncome),
position = "jitter", alpha = 1/3, pch = 19
)
library(scales)
## _Salary-xp trends ####
ggplot(records.df) +
geom_point(
aes(x = TotalWorkingYears, y = MonthlyIncome),
position = "jitter", alpha = 1/3, pch = 19
) +
theme(
plot.background = element_blank(),
panel.background = element_blank()
)
## _Salary-xp trends ####
ggplot(records.df) +
geom_point(
aes(x = TotalWorkingYears, y = MonthlyIncome),
position = "jitter", alpha = 1/3, pch = 19
) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour ="black")
)
## _Salary-xp trends ####
ggplot(records.df) +
geom_point(
aes(x = TotalWorkingYears, y = MonthlyIncome),
position = "jitter", alpha = 1/3, pch = 19
) +
scale_y_continuous(labels = comma) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour ="black")
)
str(records.df)
drive_upload(records.parsed, paste0(stage.path, "/"))
library(goggledrive)
library(googledrive)
drive_upload(records.parsed, paste0(stage.path, "/"))
## _Salary-xp trends ####
ggplot(records.df) +
geom_point(
aes(x = TotalWorkingYears, y = MonthlyIncome),
position = "jitter", alpha = 1/3, pch = 19
) +
scale_y_continuous(labels = comma) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour ="black")
)
ggsave("./Plots/plot01_trend_salaryVSxp.png")
return(out.lab)
labelFirst.years <- function(x){
x.lab <- c("Years", rep("", length(x) - 1))
out.lab <- paste(x, x.lab)
return(out.lab)
}
ggplot(records.df) +
geom_point(
aes(x = TotalWorkingYears, y = MonthlyIncome),
position = "jitter", alpha = 1/3, pch = 19
) +
scale_y_continuous(labels = comma) +
scale_x_continuous(labels = labelFirst.years) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour ="black")
)
labelLast.usd <- function(x){
x.lab <- c(rep("", length(x) - 1), "USD")
out.lab <- paste(x.lab, x)
return(out.lab)
}
labelLast.usd <- function(x){
require(scales)
x.lab <- c(rep("", length(x) - 1), "USD")
out.lab <- paste(x.lab, x)
return(out.lab)
}
ggplot(records.df) +
geom_point(
aes(x = TotalWorkingYears, y = MonthlyIncome),
position = "jitter", alpha = 1/3, pch = 19
) +
scale_y_continuous(labels = labelLast.usd) +
scale_x_continuous(labels = labelFirst.years) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour ="black")
)
x.lab <- c("years", rep("", length(x) - 1))
ggplot(records.df) +
geom_point(
aes(x = TotalWorkingYears, y = MonthlyIncome),
position = "jitter", alpha = 1/3, pch = 19
) +
scale_y_continuous(labels = labelLast.usd) +
scale_x_continuous(labels = labelFirst.years) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour ="black")
)
ggsave("./Plots/plot01_trend_salaryVSxp.png")
out.lab <- paste(x.lab, comma(x))
ggplot(records.df) +
geom_point(
aes(x = TotalWorkingYears, y = MonthlyIncome),
position = "jitter", alpha = 1/3, pch = 19
) +
scale_y_continuous(labels = labelLast.usd) +
scale_x_continuous(labels = labelFirst.years) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour ="black")
)
{
require(scales)
x.lab <- c(rep("", length(x) - 1), "USD")
out.lab <- paste(x.lab, comma(x))
return(out.lab)
}
labelLast.usd <- function(x){
require(scales)
x.lab <- c(rep("", length(x) - 1), "USD")
out.lab <- paste(x.lab, comma(x))
return(out.lab)
}
ggplot(records.df) +
geom_point(
aes(x = TotalWorkingYears, y = MonthlyIncome),
position = "jitter", alpha = 1/3, pch = 19
) +
scale_y_continuous(labels = labelLast.usd) +
scale_x_continuous(labels = labelFirst.years) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour ="black")
)
ggsave("./Plots/plot01_trend_salaryVSxp.png")
ggplot(records.df) +
geom_point(
aes(x = TotalWorkingYears, y = MonthlyIncome),
position = "jitter", alpha = 1/3, pch = 19
) +
scale_y_continuous(labels = labelLast.usd) +
scale_x_continuous(labels = labelFirst.years) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour ="black")
)
labelFirst.years <- function(x){
x.lab <- c("years", rep("", length(x) - 1))
out.lab <- paste(x, x.lab)
return(out.lab)
}
labelLast.usd <- function(x){
require(scales)
x.lab <- c(rep("", length(x) - 1), "USD")
out.lab <- paste(x.lab, comma(x))
return(out.lab)
}
ggplot(records.df) +
geom_point(
aes(x = TotalWorkingYears, y = MonthlyIncome),
position = "jitter", alpha = 1/3, pch = 19
) +
scale_y_continuous(labels = labelLast.usd) +
scale_x_continuous(labels = labelFirst.years) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour ="black")
)
ggsave("./Plots/plot01_trend_salaryVSxp.png")
ggplot(records.df) +
geom_point(
aes(x = YearsAtCompany, y = SalaryHike),
position = "jitter", alpha = 1/3, pch = 19
)
ggplot(records.df) +
geom_point(
aes(x = YearsSinceLastPromotion, y = SalaryHike),
position = "jitter", alpha = 1/3, pch = 19
)
ggplot(records.df) +
geom_point(
aes(x = YearsAtCompany, y = SalaryHike),
position = "jitter", alpha = 1/3, pch = 19
)
ggplot(records.df) +
scale_y_continuous(labels = percent) +
geom_point(
aes(x = YearsAtCompany, y = SalaryHike),
position = "jitter", alpha = 1/3, pch = 19
)
labelFirst.years <- function(x){
x.lab <- c("years", rep("", length(x) - 1))
out.lab <- paste(x, x.lab)
return(out.lab)
}
ggplot(records.df) +
scale_y_continuous(labels = percent) +
scale_x_continuous(labels = labelFirst.years) +
geom_point(
aes(x = YearsAtCompany, y = SalaryHike),
position = "jitter", alpha = 1/3, pch = 19
)
ggplot(records.df) +
scale_y_continuous(labels = percent) +
scale_x_continuous(labels = labelFirst.years) +
geom_point(
aes(x = YearsAtCompany, y = SalaryHike),
position = "jitter", alpha = 1/3, pch = 19
) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour ="black")
)
ggplot(records.df) +
scale_y_continuous(labels = percent) +
scale_x_continuous(labels = labelFirst.years) +
geom_point(
aes(x = YearsAtCompany, y = SalaryHike),
position = "jitter", alpha = 1/3, pch = 19
) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour ="black")
)
ggsave("./Plots/plot00_trend_salaryhikeVStenure.png")
library(treemapify)
str(records.df)
dept.df <- records.df %>%
group_by(Department) %>%
summarise(
Plantilla = n() # Assumes unique employees
)
library(plyr)
library(dplyr)
library(treemapify)
dept.df <- records.df %>%
group_by(Department) %>%
summarise(
Plantilla = n() # Assumes unique employees
)
str(dept.df)
dept.df <- records.df %>%
group_by(Department) %>%
summarise(
Plantilla = n() # Assumes unique employees
) %>%
ungroup()
ggplot(dept.df) +
aes(area = Plantilla, label = Department, fill = Department) +
geom_treemap() +
geom_treemap_text(fontface = "italic")
roles.df <- records.df %>%
group_by(Department, JobRole) %>%
summarise(
Plantilla = n()
) %>%
ungroup()
str(roles.df)
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = JobRole,
label = Department, fill = Department
) +
geom_treemap() +
geom_treemap_subgroup_border()
str(roles.df)
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = Department, fill = Department
) +
geom_treemap() +
geom_treemap_subgroup_border() +
geom_treemap_text(fontface = "italic") +
guides(fill = guide_legend(reverse = TRUE))
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
geom_treemap() +
geom_treemap_subgroup_border() +
geom_treemap_text(fontface = "italic") +
guides(fill = guide_legend(reverse = TRUE))
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
geom_treemap() +
geom_treemap_subgroup_border() +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic") +
geom_treemap_text(place = "bottomright") +
guides(fill = guide_legend(reverse = TRUE))
source("./Scripts/template.R")
countDistinct <- function(x) length(unique(x))
dept.cols <- dataseer.cols[1:countDistinct(roles.df$Department)]
names(dept.cols) <- unique(roles.df$Department)
dept.cols
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
geom_treemap() +
geom_treemap_subgroup_border() +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic") +
geom_treemap_text(place = "bottomright") +
scale_fill_manual(values = dept.cols)
dataser.cols
dataseer.cols
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
geom_treemap() +
geom_treemap_subgroup_border() +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic", colour = "black") +
geom_treemap_text(place = "bottomright", colour = "#787c84") +
scale_fill_manual(values = dept.cols)
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
geom_treemap() +
geom_treemap_subgroup_border() +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic", colour = "black") +
geom_treemap_text(place = "bottomright", colour = "black") +
scale_fill_manual(values = dept.cols)
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
# Job Roles
geom_treemap() +
geom_treemap_text(place = "bottomright", colour = "black") +
# Dept
geom_treemap_subgroup_border(colour = NA) +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic", colour = "black") +
# Refine
scale_fill_manual(values = dept.cols)
# guides(fill = guide_legend(reverse = TRUE))
ggsave("./Plots/plot02_parts_dept-composition.png")
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
# Job Roles
geom_treemap(colour = "white") +
geom_treemap_text(place = "bottomright", colour = "black") +
# Dept
geom_treemap_subgroup_border(colour = NA) +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic", colour = "black") +
# Refine
scale_fill_manual(values = dept.cols)
# guides(fill = guide_legend(reverse = TRUE))
ggsave("./Plots/plot02_parts_dept-composition.png")
?theme
?element_text
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
# Job Roles
geom_treemap(colour = "white") +
geom_treemap_text(place = "bottomright", colour = "black") +
# Dept
geom_treemap_subgroup_border(colour = NA) +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic", colour = "black") +
# Refine
scale_fill_manual(values = dept.cols) +
# guides(fill = guide_legend(reverse = TRUE))
theme(
legend.title = element_text(face = "bold")
)
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
# Job Roles
geom_treemap(colour = "white") +
geom_treemap_text(place = "bottomright", colour = "black") +
# Dept
geom_treemap_subgroup_border(colour = NA) +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic", colour = "black") +
# Refine
scale_fill_manual(values = dept.cols) +
# guides(fill = guide_legend(reverse = TRUE))
theme(
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "italic")
)
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
# Job Roles
geom_treemap(colour = "white") +
geom_treemap_text(place = "bottomright", colour = "black") +
# Dept
geom_treemap_subgroup_border(colour = NA) +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic", colour = "black") +
# Refine
scale_fill_manual(guide = FALSE, values = dept.cols) +
# guides(fill = guide_legend(reverse = TRUE))
theme(
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "italic")
)
ggsave("./Plots/plot02_parts_dept-composition.png")
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
# Job Roles
geom_treemap(colour = "white") +
# geom_treemap_text(place = "bottomright", colour = "black") +
# Dept
geom_treemap_subgroup_border(colour = NA) +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic", colour = "black") +
# Refine
scale_fill_manual(guide = TRUE, values = dept.cols) +
# guides(fill = guide_legend(reverse = TRUE))
theme(
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "italic")
)
ggplot(roles.df) +
aes(
area = Plantilla, subgroup = Department,
label = JobRole, fill = Department
) +
# Job Roles
geom_treemap(colour = "white") +
# geom_treemap_text(place = "bottomright", colour = "black") +
# Dept
geom_treemap_subgroup_border(colour = NA) +
geom_treemap_subgroup_text(place = "topleft", fontface = "italic", colour = "black") +
# Refine
scale_fill_manual(values = dept.cols) +
# guides(fill = guide_legend(reverse = TRUE))
theme(
legend.title = element_text(face = "bold"),
legend.text = element_text(face = "italic")
)
